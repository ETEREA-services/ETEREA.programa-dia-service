# This workflow builds two Docker images in parallel:
# 1. A standard JVM image.
# 2. A GraalVM native image.
# It then pushes both to a container registry.

name: ETEREA.programa-dia-service Build JVM Image

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # --- Job 1: Build the standard JVM image ---
  build-jvm-image:
    # Only run on pushes to the main branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for JVM Docker image
        id: meta-jvm
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_IMAGE_NAME }}
          # Add a '-jvm' suffix to tags to differentiate them
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            latest-jvm

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push JVM Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          # Point to the new JVM-specific Dockerfile
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta-jvm.outputs.tags }}
          labels: ${{ steps.meta-jvm.outputs.labels }}
          cache-from: type=gha,scope=jvm
          cache-to: type=gha,scope=jvm,mode=max

